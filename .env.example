# Шаблон файла переменных окружения для проекта 'Telegram Lottery Bot'
# Скопируйте этот файл как .env и заполните значениями для вашей среды.
# Значения по умолчанию указаны ориентировочно. Комментарии объясняют назначение параметров.

# ==========================
# Общие параметры приложения
# ==========================

# Среда выполнения: development | staging | production
ENVIRONMENT=development

# Включить подробные логи и отладочный режим (true/false, 1/0, yes/no, on/off)
DEBUG=false

# Секретный ключ для Flask-сессий и защиты форм
# Обязательно измените в проде на длинную случайную строку
SECRET_KEY=change_me

# ==================
# Telegram бот
# ==================

# Токен Telegram-бота (получить у @BotFather)
BOT_TOKEN=123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11

# Список ID администраторов через запятую (числа из Telegram, без пробелов)
# Пример: 123456789,987654321
ADMIN_IDS=

# Учетные данные входа в веб-админку
ADMIN_USERNAME=admin
ADMIN_PASSWORD=secure_password

# ==================
# Веб-сервер (Flask)
# ==================

# Адрес, на котором слушает веб-сервер
WEB_HOST=0.0.0.0

# Порт веб-сервера
WEB_PORT=5000

# Порт Prometheus-метрик (если используется внутренний экспортер)
PROMETHEUS_PORT=8000

# ==================
# Хранилище и пути
# ==================

# Путь к основной базе данных SQLite
DATABASE_PATH=data/lottery_bot.sqlite

# Папка для пользовательских загрузок (фото и т.п.)
UPLOAD_FOLDER=uploads

# Папка для экспортов (CSV/XLSX и др.)
EXPORT_FOLDER=exports

# Папка для логов
LOG_FOLDER=logs

# Папка для резервных копий
BACKUP_FOLDER=backups

# ==================
# Ограничения и производительность
# ==================

# Максимальный размер загружаемых файлов (в байтах). Пример: 10MB = 10485760
MAX_FILE_SIZE=10485760

# Максимальное кол-во участников (для ограничений и планирования ресурсов)
MAX_PARTICIPANTS=10000

# Размер пула подключений/ресурсов БД (для высоких нагрузок)
DB_POOL_SIZE=20

# Таймаут занятости БД (мс) для ожидания освобождения блокировок
DB_BUSY_TIMEOUT=5000

# Ограничение частоты отправки сообщений ботом (сообщений/секунду)
BOT_RATE_LIMIT=30

# Количество рабочих потоков для обработки задач бота
BOT_WORKER_THREADS=10

# Размер очереди сообщений/задач
MESSAGE_QUEUE_SIZE=1000

# TTL кэша для горячих данных (сек)
CACHE_TTL_HOT=30

# TTL кэша для тёплых данных (сек)
CACHE_TTL_WARM=300

# TTL кэша для холодных данных (сек)
CACHE_TTL_COLD=3600

# Размер пакета при массовых рассылках (шт. сообщений в батче)
BROADCAST_BATCH_SIZE=30

# Ограничение частоты для рассылок (сообщений/секунду)
BROADCAST_RATE_LIMIT=30

# ==================
# DuckDB (опционально для аналитики)
# ==================

# Включить использование DuckDB для аналитики (true/false)
ENABLE_DUCKDB=false

# Путь к файлу DuckDB (используется, если ENABLE_DUCKDB=true)
DUCKDB_PATH=data/analytics.duckdb

# Конец файла


# ==================
# Шардирование (Sharding)
# ==================

# Включить шардирование базы данных для высоких нагрузок (true/false)
SHARDING_ENABLED=true

# Базовый путь для хранения шардов
SHARDING_BASE_PATH=data

# Количество шардов для распределения данных
SHARDING_NUM_SHARDS=4

# Пороговое количество записей в шарде (для автомасштабирования)
SHARD_SIZE_THRESHOLD=1000000

# Пороговое время выполнения запроса в мс (для мониторинга производительности)
SHARD_PERFORMANCE_THRESHOLD=100

# Максимальный размер кэша шардов
SHARD_CACHE_MAX_SIZE=10000

# Время жизни записей в кэше шардов (сек)
SHARD_CACHE_TTL=300
